import{_ as a,r as s,o as i,c as d,a as o,b as n,e,d as r}from"./app.150355ce.js";const c={},l=o("h1",{id:"api-documentation",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#api-documentation","aria-hidden":"true"},"#"),e(" API Documentation")],-1),h=o("p",null,"This folder contains the sources of rportd API documentation following the openapi 3.0.1 standard.",-1),p=e("If you came by here to read the API documentation go to "),u={href:"https://apidoc.rport.io/master/",target:"_blank",rel:"noopener noreferrer"},_=e("apidoc.rport.io"),m=e(" to switch to the rendered HTML version. For those preferring swagger-style rendering, use "),g={href:"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/cloudradar-monitoring/rport/master/api-doc/openapi/openapi.yaml#/",target:"_blank",rel:"noopener noreferrer"},f=e("this link"),b=o("h2",{id:"build-the-documentation-from-the-sources",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#build-the-documentation-from-the-sources","aria-hidden":"true"},"#"),e(" Build the documentation from the sources")],-1),v=e("There a many tools out there to convert the yaml sources into different formats. For example "),y={href:"https://swagger.io/docs/open-source-tools/swagger-codegen/",target:"_blank",rel:"noopener noreferrer"},w=e("Swagger Codegen"),x=e(" or the "),k={href:"https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/5.0.0/",target:"_blank",rel:"noopener noreferrer"},I=e("Open API Codegenerator"),T=e(". Both are java command line tools."),A=e("More comfort for reading and writing Open API docs is provided by "),B={href:"https://github.com/Redocly/redoc",target:"_blank",rel:"noopener noreferrer"},P=e("Redoc"),R=e(" and there command line tool "),C={href:"https://redocly.com/docs/redoc/deployment/cli/",target:"_blank",rel:"noopener noreferrer"},L=e("Redoc CLI"),N=e(". With NodeJS installed you can directly launch the tools with "),S=o("code",null,"npx",-1),V=e(". See below."),E=r(`<h3 id="run-a-local-webserver" tabindex="-1"><a class="header-anchor" href="#run-a-local-webserver" aria-hidden="true">#</a> Run a local webserver</h3><p>Running a local webserver is very handy for writing the documentation. Changes to the files are immediately rendered.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./api-doc/openapi
npx @redocly/cli preview-docs openapi.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use-the-linter" tabindex="-1"><a class="header-anchor" href="#use-the-linter" aria-hidden="true">#</a> Use the linter</h3><p>Before pushing changes to the repository verify the linter does not throw errors.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./api-doc/openapi
npx @redocly/cli lint openapi.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),H=e("Details about the applied rules and there output can be found "),M={href:"https://redocly.com/docs/cli/resources/built-in-rules/",target:"_blank",rel:"noopener noreferrer"},j=e("here"),D=r(`<p>The linter is integrated into the <a href="../.github/workflows/apidoc.yml">GitHubWorkflow</a> and merge request are rejected if the linter throws errors or warnings.</p><h3 id="render-to-html" tabindex="-1"><a class="header-anchor" href="#render-to-html" aria-hidden="true">#</a> Render to HTML</h3><p>To render the API documentation into a single dependency-free html file use:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx redoc-cli build -o index.html openapi.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function F(O,W){const t=s("ExternalLinkIcon");return i(),d("div",null,[l,h,o("p",null,[p,o("a",u,[_,n(t)]),m,o("a",g,[f,n(t)])]),b,o("p",null,[v,o("a",y,[w,n(t)]),x,o("a",k,[I,n(t)]),T]),o("p",null,[A,o("a",B,[P,n(t)]),R,o("a",C,[L,n(t)]),N,S,V]),E,o("p",null,[H,o("a",M,[j,n(t)])]),D])}var G=a(c,[["render",F],["__file","index.html.vue"]]);export{G as default};
